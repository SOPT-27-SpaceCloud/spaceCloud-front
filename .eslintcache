[{"C:\\git\\spaceCloud-front\\space-cloud\\src\\App.js":"1","C:\\git\\spaceCloud-front\\space-cloud\\src\\App.test.js":"2","C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\common\\footer\\Footer.js":"3","C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\common\\header\\Header.js":"4","C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\slider\\Slide.js":"5","C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\slider\\Slider.js":"6","C:\\git\\spaceCloud-front\\space-cloud\\src\\index.js":"7","C:\\git\\spaceCloud-front\\space-cloud\\src\\pages\\main\\MainPage.js":"8"},{"size":518,"mtime":1606711248912,"results":"9","hashOfConfig":"10"},{"size":254,"mtime":1606574968243,"results":"11","hashOfConfig":"10"},{"size":25,"mtime":1606574968279,"results":"12","hashOfConfig":"10"},{"size":1146,"mtime":1606574968285,"results":"13","hashOfConfig":"10"},{"size":245,"mtime":1606828525905,"results":"14","hashOfConfig":"10"},{"size":3065,"mtime":1606832553005,"results":"15","hashOfConfig":"10"},{"size":231,"mtime":1606574968289,"results":"16","hashOfConfig":"10"},{"size":4708,"mtime":1606816843819,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1zcsi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\git\\spaceCloud-front\\space-cloud\\src\\App.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\App.test.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\common\\footer\\Footer.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\common\\header\\Header.js",["36"],"import './Header.scss';\r\nimport logo from \"../../../assets/images/header_logo_letter.svg\";\r\nimport icSearch from \"../../../assets/images/header_ic_search.svg\";\r\nimport icMenu from \"../../../assets/images/header_ic_menu.svg\";\r\nimport logoPhone from \"../../../assets/images/header_ic_logo_symbol.png\";\r\n\r\nfunction Header(){\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img className=\"header__logo\" alt=\"logo\" src={logo}/>\r\n                <img className=\"header__phone-logo\" alt=\"phoneLogo\" src={logoPhone}/>\r\n                <div className=\"header__search-bar\">\r\n                    <form>\r\n                        <input className=\"header__search-bar input\" placeholder=\"지역 또는 공간유형을 검색해보세요!\"/>\r\n                    </form>\r\n                    <div className=\"header__empty\"></div>\r\n                    <img className=\"header__search-bar-ic_search\" src={icSearch}/>\r\n                </div>\r\n                <div className=\"empty\"></div>\r\n                <img className=\"header__menu\" alt=\"menu\" src={icMenu}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\slider\\Slide.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\components\\slider\\Slider.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\index.js",[],"C:\\git\\spaceCloud-front\\space-cloud\\src\\pages\\main\\MainPage.js",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"\r\nimport \"./MainPage.scss\";\r\nimport Card from \"../../assets/images/Component1.svg\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Slider from \"../../components/slider/Slider\";\r\n//import Slider from \"./Slider\";\r\n//import leftBtn from \"../../assets/images/slider/leftButton.png\";\r\n//import rightBtn from \"../../assets/images/slider/rightButton.png\";\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <> \r\n      <div className=\"image-slider\">\r\n        <Slider/>\r\n      </div>\r\n      {/* main__container 중앙정렬 위한 container */}\r\n      <div className=\"container\">\r\n        <div className=\"main__container\">\r\n          {\" \"}\r\n          {/* container는 고정 1200px */}\r\n          <div className=\"main__table\">\r\n            <div className=\"main__table-head\">\r\n              <div className=\"title\">어떤 공간을 찾고 있나요?</div>\r\n            </div>\r\n            <div className=\"main__table-body\">\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>루프탑</td>\r\n                    <td>촬영스튜디오</td>\r\n                    <td>엠티장소</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>브라이덜샤워</td>\r\n                    <td>회의실</td>\r\n                    <td>세미나실</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>다목적홀</td>\r\n                    <td>공연장</td>\r\n                    <td>코워킹스페이스</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            {/* 그리드 컨테이너 */}\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n            <img src={Card} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default MainPage\r\n/*import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Slide from \"../../components/slider/Slide\";\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 450px;\r\n    overflow: hidden; \r\n    `;\r\nconst Button = styled.button`\r\n    all: unset;\r\n    border: 1px solid coral;\r\n    padding: 0.5em 2em;\r\n    color: coral;\r\n    border-radius: 10px;\r\n    &:hover {\r\n        transition: all 0.3s ease-in-out;\r\n        background-color: coral;\r\n        color: #fff;\r\n    }\r\n    `;\r\nconst SliderContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex; //이미지들을 가로로 나열합니다.\r\n    `;\r\n*/\r\n\r\n  /*const TOTAL_SLIDES = 1;\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const slideRef = useRef(null);\r\n  const nextSlide = () => {\r\n      if (currentSlide >= TOTAL_SLIDES) { // 더 이상 넘어갈 슬라이드가 없으면 슬라이드를 초기화합니다.\r\n      setCurrentSlide(0);\r\n      } else {\r\n      setCurrentSlide(currentSlide + 1);\r\n      }\r\n  };\r\n  const prevSlide = () => {\r\n      if (currentSlide === 0) {\r\n      setCurrentSlide(TOTAL_SLIDES);\r\n      } else {\r\n      setCurrentSlide(currentSlide - 1);\r\n      }\r\n  };\r\n  useEffect(() => {\r\n      slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n      slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; // 백틱을 사용하여 슬라이드로 이동하는 애니메이션을 만듭니다.\r\n  }, [currentSlide]);*/\r\n\r\n  {/*<Container>\r\n  <SliderContainer ref={slideRef}>\r\n      <Slide img={img1} />\r\n      <Slide img={img2} />\r\n  </SliderContainer>\r\n  <Button onClick={prevSlide}>Previous Slide</Button>\r\n  <Button onClick={nextSlide}>Next Slide</Button>\r\n  </Container>\r\n  */}\r\n\r\n  {/*<div class=\"carousel-container\">\r\n          <div class=\"img\">\r\n            <img src = {img2} id =\"lastClone\"/>\r\n            <img src = {img1} />\r\n            <img src = {img2}/>\r\n            <img src = {img1} id=\"firstClone\"/>\r\n          </div>\r\n          <div class = \"textBox\">\r\n            <p id =\"subtext\">집중 잘 되는 스터디 공간 모음</p>\r\n            <h1 id = \"mainText1\">하루동안 공부할 </h1>\r\n            <h1 id = \"mainText2\">시간이 필요하다면 </h1> \r\n          </div>\r\n          <div class = \"slide-controls\">\r\n            <button id = \"prev-btn\">\r\n              <img src = {prevBtn}></img>\r\n            </button>\r\n            <button id = \"next-btn\">\r\n              <img srt = {nextBtn}></img>\r\n            </button>\r\n          </div>\r\n        </div> */}",{"ruleId":"53","severity":1,"message":"54","line":18,"column":21,"nodeType":"55","endLine":18,"endColumn":83},{"ruleId":"56","severity":1,"message":"57","line":4,"column":17,"nodeType":"58","messageId":"59","endLine":4,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":4,"column":27,"nodeType":"58","messageId":"59","endLine":4,"endColumn":36},{"ruleId":"56","severity":1,"message":"61","line":4,"column":38,"nodeType":"58","messageId":"59","endLine":4,"endColumn":44},{"ruleId":"53","severity":1,"message":"54","line":49,"column":13,"nodeType":"55","endLine":49,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":50,"column":13,"nodeType":"55","endLine":50,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":51,"column":13,"nodeType":"55","endLine":51,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":52,"column":13,"nodeType":"55","endLine":52,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":53,"column":13,"nodeType":"55","endLine":53,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":54,"column":13,"nodeType":"55","endLine":54,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":55,"column":13,"nodeType":"55","endLine":55,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":56,"column":13,"nodeType":"55","endLine":56,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":57,"column":13,"nodeType":"55","endLine":57,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":58,"column":13,"nodeType":"55","endLine":58,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":59,"column":13,"nodeType":"55","endLine":59,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":117,"column":3,"nodeType":"64","messageId":"65","endLine":125,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":127,"column":3,"nodeType":"64","messageId":"65","endLine":147,"endColumn":19},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]